$button: $grey-darker !default;
$button-background: $white !default;
$button-border: $grey-lighter !default;

$button-hover: $link-hover !default;
$button-hover-border: $link-hover-border !default;

$button-focus: $link-focus !default;
$button-focus-border: $link-focus-border !default;

$button-active: $link-active !default;
$button-active-border: $link-active-border !default;

$button-shadow-inset: inset 0 1px 2px rgba($black, 0.2) !default;

@function buttonIconSpacing($button-font-size, $icon-width) {
    $button-value: removeUnit($button-font-size);
    $button-height: 2.5rem * $button-value;
    $button-horizontal-padding: 2 * 0.75rem * $button-value;
    $difference: $button-height - $button-horizontal-padding - $icon-width;
    @return $difference / 2;
}

@mixin button-icon($button-font-size) {
    $small-offset: buttonIconSpacing($button-font-size, 1rem);
    $normal-offset: buttonIconSpacing($button-font-size, 1.5rem);
    $medium-offset: buttonIconSpacing($button-font-size, 2rem);
    $large-offset: buttonIconSpacing($button-font-size, 3rem);

    .icon {
        &:first-child:not(:last-child) {
            margin-left: $normal-offset;
            margin-right: $button-font-size / 2;
        }

        &:last-child:not(:first-child) {
            margin-left: $button-font-size / 2;
            margin-right: $normal-offset;
        }

        &:first-child:last-child {
            margin-left: calc(-1px + #{$normal-offset});
            margin-right: calc(-1px + #{$normal-offset});
        }

        &.is-small {
            &:first-child:not(:last-child) {
                margin-left: $small-offset;
            }

            &:last-child:not(:first-child) {
                margin-right: $small-offset;
            }

            &:first-child:last-child {
                margin-left: calc(-1px + #{$small-offset});
                margin-right: calc(-1px + #{$small-offset});
            }
        }

        &.is-medium {
            &:first-child:not(:last-child) {
                margin-left: $medium-offset;
            }

            &:last-child:not(:first-child) {
                margin-right: $medium-offset;
            }

            &:first-child:last-child {
                margin-left: calc(-1px + #{$medium-offset});
                margin-right: calc(-1px + #{$medium-offset});
            }
        }

        &.is-large {
            &:first-child:not(:last-child) {
                margin-left: $large-offset;
            }

            &:last-child:not(:first-child) {
                margin-right: $large-offset;
            }

            &:first-child:last-child {
                margin-left: calc(-1px + #{$large-offset});
                margin-right: calc(-1px + #{$large-offset});
            }
        }
    }
}

@mixin button-small() {
    border-radius: $radius-small;
    font-size: $size-small;
    @include button-icon($size-small);
}

@mixin button-medium() {
    font-size: $size-medium;
    @include button-icon($size-medium);
}

@mixin button-large() {
    font-size: $size-large;
    @include button-icon($size-large);
}

.button {
    @include control();
    @include unselectable();
    background-color: $button-background;
    border: 1px solid $button-border;
    color: $button;
    cursor: pointer;
    justify-content: center;
    padding-left: 0.75em;
    padding-right: 0.75em;
    text-align: center;
    white-space: nowrap;

    strong {
        color: inherit;
    }
    @include button-icon($size-normal);

    &:hover,
    &.is-hovered {
        border-color: $button-hover-border;
        color: $button-hover;
    }

    &:focus,
    &.is-focused {
        border-color: $button-focus-border;
        box-shadow: 0 0 0.5em rgba($button-focus-border, 0.25);
        color: $button-focus;
    }

    &:active,
    &.is-active {
        border-color: $button-active-border;
        box-shadow: $button-shadow-inset;
        color: $button-active;
    }

    &.is-link {
        background-color: transparent;
        border-color: transparent;
        color: $text;
        text-decoration: underline;

        &:hover,
        &.is-hovered,
        &:focus,
        &.is-focused,
        &:active,
        &.is-active {
            background-color: $background;
            color: $text-strong;
        }
    }

    &.is-raised:not([disabled]) {
        box-shadow: 0 2px 5px 0 rgba($black, 0.26);
    }

    &.is-fab {
        z-index: 20;
        line-height: 56px;
        min-width: 0;
        width: 56px;
        height: 56px;
        vertical-align: middle;
        box-shadow: 0 2px 5px 0 rgba($black, 0.26);
        border-radius: 50%;
        background-clip: padding-box;
        overflow: hidden;
        transition: all .3s cubic-bezier(.55,0,.55,.2);
        transition-property: background-color, box-shadow, transform, -webkit-transform;

        &.is-mini {
            line-height: 40px;
            width: 40px;
            height: 40px;
        }
    }

    @each $name, $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);
        &.is-#{$name} {
            background-color: $color;
            border-color: transparent;
            color: $color-invert;

            &:hover,
            &.is-hovered {
                background-color: darken($color, 2.5%);
                border-color: transparent;
                color: $color-invert;
            }

            &:focus,
            &.is-focused {
                border-color: transparent;
                box-shadow: 0 0 0.5em rgba($color, 0.25);
                color: $color-invert;
            }

            &:active,
            &.is-active {
                background-color: darken($color, 5%);
                border-color: transparent;
                box-shadow: $button-shadow-inset;
                color: $color-invert;
            }

            &.is-inverted {
                background-color: $color-invert;
                color: $color;

                &:hover {
                    background-color: darken($color-invert, 5%);
                }
            }

            &.is-loading {
                &:after {
                    border-color: transparent transparent $color-invert $color-invert !important;
                }
            }

            &.is-outlined {
                background-color: transparent;
                border-color: $color;
                color: $color;

                &:hover,
                &:focus {
                    background-color: $color;
                    border-color: $color;
                    color: $color-invert;
                }

                &.is-loading {
                    &:after {
                        border-color: transparent transparent $color $color !important;
                    }
                }
            }

            &.is-inverted.is-outlined {
                background-color: transparent;
                border-color: $color-invert;
                color: $color-invert;

                &:hover,
                &:focus {
                    background-color: $color-invert;
                    color: $color;
                }
            }
        }
    }

    &.is-small {
        @include button-small();
    }

    &.is-medium {
        @include button-medium();
    }

    &.is-large {
        @include button-large();
    }

    &[disabled],
    &.is-disabled {
        opacity: 0.5;
    }

    &.is-fullwidth {
        display: flex;
        width: 100%;
    }

    &.is-loading {
        color: transparent !important;
        pointer-events: none;
        &:after {
            @include loader();
            @include center(16px);
            position: absolute !important;
        }
    }
}
